name: Auto Push to Stage on Release Commit
on:
  push:
    branches:
      - main

jobs:
  release-to-stage:
    if: contains(github.event.head_commit.message, 'release:')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Check if stage branch exists
        id: check_stage
        run: |
          if git ls-remote --heads origin stage | grep -q stage; then
            echo "stage_exists=true" >> $GITHUB_OUTPUT
          else
            echo "stage_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create or update stage branch
        run: |
          if [ "${{ steps.check_stage.outputs.stage_exists }}" = "true" ]; then
            echo "Stage branch exists, checking it out..."
            git checkout -b stage origin/stage
          else
            echo "Stage branch doesn't exist, creating it..."
            git checkout -b stage
          fi

      - name: Merge main into stage
        run: |
          git merge origin/main --no-edit --strategy-option=theirs
        continue-on-error: true

      - name: Check merge status and push
        run: |
          if git diff --name-only --diff-filter=U | grep -q .; then
            echo "‚ùå MERGE FAILED: Conflicts detected in the following files:"
            echo "=================================================="
            git diff --name-only --diff-filter=U
            echo "=================================================="
            echo ""
            echo "Detailed conflict information:"
            git status --porcelain | grep '^UU\|^AA\|^DD\|^AU\|^UA\|^DU\|^UD'
            echo ""
            echo "üîç To see the conflicts, run:"
            echo "  git checkout stage"
            echo "  git merge main"
            echo ""
            echo "üí° Common solutions:"
            echo "  1. Resolve conflicts manually in the conflicted files"
            echo "  2. Use 'git add <file>' after resolving each conflict"
            echo "  3. Run 'git commit' to complete the merge"
            echo "  4. Push the resolved merge to stage branch"
            exit 1
          else
            echo "‚úÖ Merge completed successfully!"
            echo "üì§ Pushing to stage branch..."
            git push origin stage
            echo "üéâ Successfully pushed main to stage branch!"
          fi
